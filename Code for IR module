#include <IRremoteESP8266.h>
#include <ESP8266WiFi.h>
#include <IRsend.h>
WiFiClient client;
WiFiServer server(80);
const char* ssid = "user";
const char* password = "password";
String  command =""; // Command received from Android device

IRsend irsend(0); //an IR led is connected to GPIO pin 0

void setup()
{
  irsend.begin();
  Serial.begin(9600);
  connectWiFi();
  server.begin();
}

void loop() {

  client = server.available();
    if (!client) return; 
    command = checkClient ();
// Check Which Command is received and Do Action According to It.
         if (command == "power")  irsend.sendSony(0xA90, 12, 2);
    else if (command == "s1")     irsend.sendSony(0x10, 12, 2);
    else if (command == "s2")     irsend.sendSony(0x810, 12, 2);
    else if (command == "s3")     irsend.sendSony(0x410, 12, 2);
    else if (command == "s4")     irsend.sendSony(0xc10, 12, 2);
    else if (command == "s5")     irsend.sendSony(0x210, 12, 2);
    else if (command == "s6")     irsend.sendSony(0xa10, 12, 2);
    else if (command == "s7")     irsend.sendSony(0x610, 12, 2);
    else if (command == "s8")     irsend.sendSony(0xe10, 12, 2);
    else if (command == "s9")     irsend.sendSony(0x110, 12, 2);
    else if (command == "s0")     irsend.sendSony(0x910, 12, 2);
    else if (command == "vup")    irsend.sendSony(0x490, 12, 2);
    else if (command == "vdown")  irsend.sendSony(0xc90, 12, 2);
    else if (command == "pup")    irsend.sendSony(0x90, 12, 2);
    else if (command == "pdown")  irsend.sendSony(0x890, 12, 2);
    else if (command == "tv")     irsend.sendSony(0xA50, 12, 2);
    else if (command == "mute")   irsend.sendSony(0x290, 12, 2);
    sendBackEcho(command); // send command echo back to android device
    command = "";
    Serial.println(command);
   
}

/* connecting WiFi */
void connectWiFi()
{
  Serial.println("Connecting to WIFI");
  WiFi.begin(ssid, password);
  while ((!(WiFi.status() == WL_CONNECTED)))
  {
    delay(300);
    Serial.print("..");
  }
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("NodeMCU Local IP is : ");
  Serial.print((WiFi.localIP()));
}

/* check command received from Android Device */
String checkClient (void)
{
  while(!client.available()) delay(1); 
  String request = client.readStringUntil('\r');
  request.remove(0, 5);
  request.remove(request.length()-9,9);
  return request;
}

/* send command echo back to Raspberry Pi */
void sendBackEcho(String echo)
{
  client.println("HTTP/1.1 200 OK");
  client.println("Content-Type: text/html");
  client.println("");
  client.println(echo);
  client.stop();
  delay(1);

}<br>
